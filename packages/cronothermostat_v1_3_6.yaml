homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        Package: 'Cronotermostato'
        Version: '1.3.6'
        Author: 'MARIO @tlod80'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    climate.riscaldamento:
      <<: *customize
    input_datetime.orario_accensione_term:
      <<: *customize
    input_datetime.orario_spegnimento_term:
      <<: *customize
    input_number.temperatura_termostato:
      <<: *customize
    input_number.temperatura_eco:
      <<: *customize
    sensor.temperatura_attuale:
      <<: *customize
    sensor.temperatura_impostata:
      <<: *customize
    input_select.modalita_termostato:
      <<: *customize

    ##--------------------- IMPOSTAZIONI DEL PACKAGE ---------------------##
      setting:
        Interruttore Caldaia: &caldaia 'switch.sonoff_10004b541f'
        Sensore Temperatura: &sens_temp 'sensor.sonoff_10004b541f_temperature'
        Tracker: &tracker 'device_tracker.iphone7'
        Zona_casa: &zona 'home'
        Servizio Notifica: &servizio 'notify.mobile_app_iphone7'

    ##---------------------                           ---------------------##

#Entità termostato.

climate:
  - platform: generic_thermostat
    name: Riscaldamento
    heater: *caldaia
    target_sensor: *sens_temp
    min_temp: 18
    max_temp: 24
    ac_mode: False
    hot_tolerance: 0
    cold_tolerance: 0.5



#Le modalità del termostato:
# OFF: termostato spento
# AUTO: il termostato si accende in base agli orari impostati se si è in casa
# MANUALE: termostato acceso. Non tiene conto di orari e posizione
# ECO: abbassa la temperatura ma comuque rimane acceso, ideale per la notte
# PRERISCALDAMENTO: il termostato si accende all'ora impostata anche quando si è lontani da casa

input_select:
  modalita_termostato:
    options:
      - "OFF"
      - "AUTO"
      - "MANUALE"
      - "ECO"
      - "PRERISCALDAMENTO"



#Serve per tenere traccia quando si passa in automatico alla modalià ECO
#in modo da ritornare alla modalità precedente

  modalita_old:
    options:
      - "OFF"
      - "AUTO"
      - "MANUALE"
      - "ECO"
      - "PRERISCALDAMENTO"
#Questo input_select seve per le visualizzazioni in lovelace
  visualizzazione:
    options:
      - "TERMOSTATO"
      - "ORARIO"
      - "ECO"
      - "IMPOSTAZIONI"


  modalita_trk:
    options:
      - "OFF"
      - "ECO"


input_datetime:
  orario_accensione_term:
    has_date: false
    has_time: true
  orario_spegnimento_term:
    has_date: false
    has_time: true
  orario_accensione_term2:
    has_date: false
    has_time: true
  orario_spegnimento_term2:
    has_date: false
    has_time: true
  orario_accensione_term3:
    has_date: false
    has_time: true
  orario_spegnimento_term3:
    has_date: false
    has_time: true
  orario_accensione_eco_term:
    has_date: false
    has_time: true
  orario_spegnimento_eco_term:
    has_date: false
    has_time: true

input_boolean:
  accensione2:
  accensione3:
  eco_orario:


input_text:
  casella_vuota:
    initial: ' '


input_number:
  temperatura_termostato:
    min: 18
    max: 24
    step: 0.5
    unit_of_measurement: °C


  temperatura_termostato_old:
    min: 18
    max: 24
    step: 0.5

  temperatura_eco:
    min: 18
    max: 24
    step: 0.5


sensor:
  - platform: time_date
    display_options:
      - 'time'


  - platform: template
    sensors:
      temperatura_attuale:
        friendly_name: "temperatura attuale"
        value_template: "{{ state_attr('climate.riscaldamento', 'current_temperature') }}"
        unit_of_measurement: °C

  - platform: template
    sensors:
      temperatura_impostata:
        friendly_name: "temperatura impostata"
        value_template: "{{ state_attr('climate.riscaldamento', 'temperature') }}"
  - platform: attributes
    friendly_name: "interruttore_caldaia"
    attribute: hvac_action
    entities:
      - climate.riscaldamento


script:
  auto:
    sequence:
      - service: climate.turn_off
        entity_id: climate.riscaldamento
      - service: input_select.select_option
        data:
          entity_id: input_select.modalita_termostato
          option: AUTO
      - service: input_select.select_option
        data:
          entity_id: input_select.modalita_old
          option: AUTO

  pre:
    sequence:
      - service: climate.turn_off
        entity_id: climate.riscaldamento
      - service: input_select.select_option
        data:
          entity_id: input_select.modalita_termostato
          option: PRERISCALDAMENTO
      - service: input_select.select_option
        data:
          entity_id: input_select.modalita_old
          option: PRERISCALDAMENTO

automation:
#Modalità manuale
  - alias: modalità manuale term
    trigger:
    - entity_id: input_select.modalita_termostato
      platform: state
      to: 'MANUALE'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_on
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: MANUALE
#Modalità off
  - alias: modalità off term
    trigger:
    - entity_id: input_select.modalita_termostato
      platform: state
      to: 'OFF'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: 'OFF'
#Modalità auto
  - alias: accensione auto term
    trigger:
    - entity_id: input_select.modalita_termostato
      platform: state
      to: AUTO
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: *tracker
        state: *zona
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
             - condition: state
               entity_id: input_boolean.accensione3
               state: 'on'
             - condition: template
               value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
             - condition: template
               value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    action:
    - service: climate.turn_on
      data:
        entity_id: climate.riscaldamento
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: accensione auto orario term
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: AUTO
      - condition: state
        entity_id: *tracker
        state: *zona
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_on
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: accensione auto mod input term
    trigger:
    - entity_id: input_datetime.orario_accensione_term
      platform: state
    - entity_id: input_datetime.orario_accensione_term2
      platform: state
    - entity_id: input_datetime.orario_accensione_term3
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term2
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term3
      platform: state
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: *tracker
        state: *zona
      - condition: state
        entity_id: input_select.modalita_termostato
        state: AUTO
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
             - condition: state
               entity_id: input_boolean.accensione3
               state: 'on'
             - condition: template
               value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
             - condition: template
               value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    action:
    - service: climate.turn_on
      data:
        entity_id: climate.riscaldamento
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: accensione auto rientro term
    trigger:
    - platform: state
      entity_id: *tracker
      to: *zona
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: or
          conditions:
            - condition: and
              conditions:
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
            - condition: and
              conditions:
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_boolean.accensione2
                  state: 'on'
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_boolean.accensione2
                  state: 'on'
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_boolean.accensione3
                  state: 'on'
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
            - condition: and
              conditions:
                - condition: state
                  entity_id: input_boolean.accensione3
                  state: 'on'
                - condition: template
                  value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
                - condition: template
                  value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_on
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO
    - service: *servizio
      data:
        title: Bentornato/a
        message: Il termostato è acceso

  - alias: spegnimento auto orario term
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
    - condition: state
      entity_id: input_select.modalita_termostato
      state: AUTO
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegnimento auto orario input term
    trigger:
    - entity_id: input_datetime.orario_accensione_term
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term
      platform: state
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: template
          value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegnimento auto orario input term2
    trigger:
    - entity_id: input_datetime.orario_accensione_term2
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term2
      platform: state
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: state
          entity_id: input_boolean.accensione2
          state: 'on'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegnimento auto orario term2
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: state
          entity_id: input_boolean.accensione2
          state: 'on'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegnimento auto orario term3
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: state
          entity_id: input_boolean.accensione3
          state: 'on'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegnimento auto orario input term3
    trigger:
    - entity_id: input_datetime.orario_accensione_term3
      platform: state
    - entity_id: input_datetime.orario_spegnimento_term3
      platform: state
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
        - condition: state
          entity_id: input_select.modalita_termostato
          state: AUTO
        - condition: state
          entity_id: input_boolean.accensione3
          state: 'on'
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: spegn auto trk term
    trigger:
    - platform: state
      entity_id: *tracker
      from: *zona
    condition:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: AUTO
    action:
    - service: climate.turn_off
      data:
        entity_id: climate.riscaldamento
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO
    - service: *servizio
      data:
        title: TERMOSTATO SPENTO
        message: "Il termostato è stato spento. Buona giornata!"
#impostazione temperatura
  - alias: temperatura termostato term
    trigger:
      platform: state
      entity_id: input_number.temperatura_termostato
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.riscaldamento
          temperature: "{{ states('input_number.temperatura_termostato') }}"
          hvac_mode: heat
  - alias: sincro temperatura term
    trigger:
    - platform: state
      entity_id: sensor.temperatura_impostata
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.temperatura_termostato
        value: "{{ states('sensor.temperatura_impostata') }}"
#Modalità eco
  - alias: modalità eco
    trigger:
      entity_id: input_select.modalita_termostato
      platform: state
      to: ECO
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.temperatura_termostato_old
          value: "{{ states('input_number.temperatura_termostato') }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.temperatura_termostato
          value: "{{ states('input_number.temperatura_eco') }}"

  - alias: modalità eco auto term
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.orario_accensione_eco_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: 'AUTO'
        - condition: state
          entity_id: input_select.modalita_termostato
          state: 'MANUALE'
        - condition: state
          entity_id: input_select.modalita_termostato
          state: 'PRERISCALDAMENTO'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.modalita_termostato
          option: ECO

  - alias: passaggio da ECO term
    trigger:
    - entity_id: input_select.modalita_termostato
      from: ECO
      platform: state
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.temperatura_termostato
          value: "{{ states('input_number.temperatura_termostato_old') }}"

  - alias: modalità normale term
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.orario_spegnimento_eco_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.modalita_termostato
          option: "{{ states('input_select.modalita_old')}}"
  - alias: auto eco on term
    trigger:
      platform: state
      entity_id: input_boolean.eco_orario
      to: 'on'
    action:
      - service: automation.turn_on
        data:
          entity_id: automation.modalita_eco_auto_term
      - service: automation.turn_on
        data:
          entity_id: automation.modalita_normale_term
  - alias: auto eco off term
    trigger:
      platform: state
      entity_id: input_boolean.eco_orario
      to: 'off'
    action:
      - service: automation.turn_off
        data:
          entity_id: automation.modalita_eco_auto_term
      - service: automation.turn_off
        data:
          entity_id: automation.modalita_normale_term
#Modalità preriscaldamento
  - alias: preriscaldamento term
    description: ''
    trigger:
    - entity_id: input_select.modalita_termostato
      platform: state
      to: PRERISCALDAMENTO
    condition:
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
             - condition: state
               entity_id: input_boolean.accensione3
               state: 'on'
             - condition: template
               value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
             - condition: template
               value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"

    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_on
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: PRERISCALDAMENTO

  - alias: accensione pre orario term
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: PRERISCALDAMENTO
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione2
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) > (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('input_datetime.orario_accensione_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: template
                value_template: "{{ states('sensor.time') < (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
              - condition: state
                entity_id: input_boolean.accensione3
                state: 'on'
    action:
    - data:
       entity_id: climate.riscaldamento
      service: climate.turn_on
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: PRERISCALDAMENTO

  - alias: spegnimento pre term
    trigger:
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term2', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') >= (state_attr('input_datetime.orario_spegnimento_term3', 'timestamp') | int | timestamp_custom('%H:%M', false)) }}"
    condition:
    - condition: state
      entity_id: input_select.modalita_termostato
      state: PRERISCALDAMENTO
    action:
    - data:
        entity_id: climate.riscaldamento
      service: climate.turn_off
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: PRERISCALDAMENTO
#messaggio
  - alias: mess term
    trigger:
    - platform: state
      entity_id: climate.riscaldamento
      to: 'heat'
    action:
    - service: *servizio
      data:
        title: TERMOSTATO ACCESO
        message: >-
           Modalità termostato {{ states.input_select.modalita_termostato.state }}

           Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

           Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C

#sincro sensore temperatura all'avvio
  - alias: sincronizzazione temperatura term
    trigger:
    - event: start
      platform: homeassistant
    action:
    - delay: '5'
    - service: automation.turn_off
      data:
        entity_id: automation.mess_term
    - service: automation.turn_off
      data:
        entity_id: automation.sincro_accensione_risc_term
    - service: automation.turn_off
      data:
        entity_id: automation.sincro_spegnimento_term
    - service: climate.turn_on
      data:
        entity_id: climate.riscaldamento
    - delay: '2'
    - service: climate.turn_off
      data:
        entity_id: climate.riscaldamento
    - service: input_select.select_option
      data_template:
        entity_id: input_select.modalita_termostato
        option: "{{ states('input_select.modalita_old')}}"
    - service: automation.turn_on
      data:
        entity_id: automation.mess_term
    - service: automation.turn_on
      data:
        entity_id: automation.sincro_accensione_risc_term
    - service: automation.turn_on
      data:
        entity_id: automation.sincro_spegnimento_term
#automazioni tracker spegnimento ed eco
  - alias: passaggio ad eco in uscita term
    trigger:
    - platform: state
      entity_id: *tracker
      from: *zona
    condition:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: AUTO
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_termostato
        option: ECO
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO
    - service: *servizio
      data:
        title: ATTENZIONE
        message: "Il termostato è in modalità ECO. Buona giornata!"

  - alias: accensione auto da eco term
    trigger:
    - platform: state
      entity_id: *tracker
      to: *zona
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: ECO
      - condition: state
        entity_id: input_select.modalita_old
        state: AUTO
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_termostato
        option: AUTO
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_old
        option: AUTO

  - alias: selezione trk spegn term
    trigger:
    - platform: state
      entity_id: input_select.modalita_trk
      to: 'OFF'
    action:
    - service: automation.turn_off
      entity_id: automation.accensione_auto_da_eco_term
    - service: automation.turn_off
      entity_id: automation.passaggio_ad_eco_in_uscita_term
    - service: automation.turn_on
      entity_id: automation.spegn_auto_trk_term
    - service: automation.turn_on
      entity_id: automation.accensione_auto_rientro_term

  - alias: selezione trk eco term
    trigger:
    - platform: state
      entity_id: input_select.modalita_trk
      to: ECO
    action:
    - service: automation.turn_off
      entity_id: automation.spegn_auto_trk_term
    - service: automation.turn_off
      entity_id: automation.accensione_auto_rientro_term
    - service: automation.turn_on
      entity_id: automation.accensione_auto_da_eco_term
    - service: automation.turn_on
      entity_id: automation.passaggio_ad_eco_in_uscita_term
# sincro con app esterna
  - alias: sincro spegnimento term
    trigger:
    - platform: state
      entity_id: climate.riscaldamento
      to: 'off'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.modalita_termostato
          state: 'MANUALE'
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_termostato
        option: 'OFF'

  - alias: sincro accensione risc term
    trigger:
    - platform: state
      entity_id: climate.riscaldamento
      to: 'heat'
    condition:
      - condition: state
        entity_id: input_select.modalita_termostato
        state: 'OFF'
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.modalita_termostato
        option: 'MANUALE'         
